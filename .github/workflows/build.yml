name: Build

on: [push, pull_request]

jobs:
  docker-build:
    name: Docker Run Test on ${{ matrix.platform }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          # No need to test on amd64
          - linux/arm64

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ci/Dockerfile.test
          platforms: ${{ matrix.platform }}
          tags: cyvcf2:test
          push: false
          load: true
          build-args: |
            PYTHON_VERSION=slim

      - name: Docker Run Tests
        run: |
          docker run --rm --platform ${{ matrix.platform }} cyvcf2:test pytest --cov cyvcf2 --cov-report term-missing

  build:
    name: Run tests on Python ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, macos]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        exclude:
          # Run only the latest versions on macOS
          - os: macos
            python-version: "3.7"
          - os: macos
            python-version: "3.8"
          - os: macos
            python-version: "3.9"
          - os: macos
            python-version: "3.10"
          - os: macos
            python-version: "3.11"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Linux build prerequisites
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libcurl4-openssl-dev zlib1g-dev libssl-dev liblzma-dev \
            libbz2-dev libdeflate-dev
      - name: Install macOS build prerequisites
        if: runner.os == 'macOS'
        run: |
          brew install automake libdeflate

      - name: Install
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          CYVCF2_HTSLIB_CONFIGURE_OPTIONS="--enable-libcurl --enable-s3 --enable-lzma --enable-bz2 --with-libdeflate" \
            CYTHONIZE=1 MACOSX_DEPLOYMENT_TARGET=10.9 python setup.py build_ext -i

      - name: Test
        run: |
          pytest --cov cyvcf2 --cov-report term-missing

  sdist:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu]
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install sdist prerequisites
        run: |
          pip install -r requirements.txt

      - name: Create source distribution
        run: CYTHONIZE=1 python setup.py sdist

      - name: Install Linux build prerequisites
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libcurl4-openssl-dev zlib1g-dev libssl-dev liblzma-dev \
            libbz2-dev libdeflate-dev

      - name: Build (via sdist tarball)
        run: pip install --verbose --no-deps --no-binary='cyvcf2' cyvcf2-*.tar.gz
        working-directory: dist

      - name: Install test prerequisites
        run: |
          pip install pytest pytest-cov

      - name: Test
        run: |
          pytest --import-mode importlib --cov cyvcf2 --cov-report term-missing

      - name: Upload sdist tarball
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/cyvcf2-*.tar.gz
          retention-days: 7
