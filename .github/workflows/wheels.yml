name: Wheels

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: "3.7"

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel

    - name: Build wheels for Linux
      if: matrix.os == 'ubuntu-18.04'
      run: |
        python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_SKIP: "pp* cp27-* cp34-* cp35-* *i686*"
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_BEFORE_BUILD_LINUX: "{project}/ci/linux-deps"
        CIBW_TEST_COMMAND: "{project}/ci/test"
        CIBW_ENVIRONMENT: "CYTHONIZE=1 LDFLAGS='-L/usr/lib64/openssl11' CPPFLAGS='-I/usr/include/openssl11' C_INCLUDE_PATH='/root/include' LIBRARY_PATH='/root/lib'"

    - name: Build wheels for Mac OS
      if: matrix.os == 'macos-latest'
      run: |
        python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_SKIP: "pp* cp27-* cp34-* cp35-* *i686*"
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_BEFORE_BUILD_MACOS: "{project}/ci/osx-deps"
        CIBW_TEST_COMMAND: "{project}/ci/test"
        CIBW_ENVIRONMENT: "CYTHONIZE=1"
        LDFLAGS: "-L/usr/local/opt/openssl@1.1/lib"
        CPPFLAGS: "-I/usr/local/opt/openssl@1.1/include"
        PKG_CONFIG_PATH: "/usr/local/opt/openssl@1.1/lib/pkgconfig"

    # Enable tmate debugging of manually-triggered workflows if the input option was provided
    - name: Setup tmate session
      if: ${{ always() && github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      uses: mxschmitt/action-tmate@v3

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"

      - name: Install dependencies
        run: |
          sudo apt-get install libcurl4-openssl-dev libbz2-dev liblzma-dev libssl-dev
          git submodule init
          git submodule update
          cd htslib
          autoheader
          autoconf
          ./configure --enable-libcurl --enable-s3 --enable-lzma --enable-bz2
          make
          cd ..
          pip install -r requirements.txt

      - name: Build sdist
        run: CYTHONIZE=1 python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
